# tests which train gets to drive in case of a link conflict: two trains want to enter a section but only one of them can do so at the same time
priority

# test railSignalConstraints
constraints
insertionConstraints

# switch from block signaling to moving block by inserting a traffic light node
end_block_mode

# tests for moving block operation
moving_block

# a forking rail line without a signal at the fork. a warning should appear
fork_without_signal

# a simulation with a step size of 0.3 seconds  involving rail signals
small_step_size

# a simulation with a step size of 3 seconds  involving rail signals
large_step_size

# a train is following another one through several blocks
two_following_trains

# two rail signals with the same programID
two_signals_with_same_program

# several blocks in a chain
several_blocks

# a rail signal with three incoming lanes, each with a train at the beginning of the simulation, and one outgoing lane.
several_incoming_trains

# a rail signal with three incoming, one outgoing lane, one train. 
# with internal lanes
several_incoming_lanes_2

# a rail signal with three incoming, one outgoing lane, one train. 
# no internal lanes
several_incoming_lanes

# a rail signal with one incoming and three outgoing lanes
several_outgoing_lanes

# a train gets inserted behind a rail signal
inserted_behind_signal

# a rail signal with one incoming lange
single_incoming_lane

# Two trains approaching conflicting block simultaneously causing a head-on conflict
halting_conflict

# switches for a bidirectional section guarded by extra rail signal nodes
indirect_guard

# switches for a bidirectional section guarded by extra rail signal nodes,
# traffic light state must take the route of the approaching vehicle into account.
# The blocked vehicle has a fixed route
indirect_guard_route_conflict

# switches for a bidirectional section guarded by extra rail signal nodes,
# traffic light state must take the route of the approaching vehicle into account.
# The blocked vehicle cannot reroute due to a scheduled stop
indirect_guard_route_conflict2

# switches for a bidirectional section guarded by extra rail signal nodes,
# traffic light state must take the route of the approaching vehicle into account.
# The blocked vehicle cannot reroute (no alternative)
indirect_guard_route_conflict3

# switches for a bidirectional section guarded by extra rail signal nodes,
# traffic light state must take the route of the approaching vehicle into account.
# The blocked vehicle may reroute
indirect_guard_route_conflict_reroute

# track layout with a circle in it
circle

# track layout with a circle in it
circle_bidi

# track layout with a circle in the incoming block
circle_backward

# track layout with a circle and a single railSignal
circle_1signal

# prevent insertion on short edge before red rail signal
guard_insertion

# upstream signal that guards switch must take route of approaching trains into account for deciding signal state
indirect_guard_check_route

# driveway computation should end when hitting a buffer stop
siding_deadend

# two stopped trains on parallel tracks must enter the same section
stopped_link_conflict

# a stopped train on parallel track should not block a train without stop from entering the subsequent section
stopped_link_conflict2

# approach to conflict link must be guaranteed within some limits (regardless of brakeGap or number of intermediate junctions)
conflict_lookahead

# expose crash from loading order of files via #13412
route_as_additional

# insertion checks do not prevent deadlock (related to case2 of #12085)
deadlock_insertion

# see #14554
reversal_before_signal

# driveways must register vehicle after it finishes parking
parking_insertion

# one route ends within the block and another train starts within the block
end_depart_within

# test flank search beyond route end
end_within

# a driveway is updated after being used
update_driveways

# reduce number of "parallel" driveways
driveway_variants

# corner case that caused a crash
subDriveWay_short

# corner case that causes a deadlock between 2 vehicles due to invalid driveway matching.
# 
# Even after corrected matching, there is still a deadlock because train t4 which enters last never passes a switch or signal and therefore doesnt "see" any conflicts.
driveWayShort_badMatch
