# test for rerouting ahead of an occupied parkingArea
visibility

# tests for determining the destination parkingArea from a list of alternatives when there is no prior knowledge of capacity, (iteratively until a space is found)
parkingSearch

# tests for rerouting persons along with the vehicles
riders

# complex test scenario by Mirco
complex

# parkingArea is too short for the given roadsideCapacity (lots overlap)
roadsideCapacity_short

# test angled roadside parking (including vehicle positions)
angled_roadside_parking

# test angled roadside parking (including vehicle positions)
angled_roadside_parking_trailer

# test what happens if a queue forms and a vehicle wants to exit the parkingarea
congestion

# test what happens if a queue forms and a vehicle wants to exit the parkingarea. Using <space> definitions instead of roadside capacity
congestion_spaces

# alternative parkingAreas in a circle and too much demand. Test cooperation between vehicles that wish to park and those that wish to exit. (Circumvent instant rerouting causing infinite loop, #5128)
congestion_alternatives

# only activate rerouter after waiting for some time
timeThreshold

# afte rerouting use new parkingArea as the final destination
newDestination

# afte rerouting use new parkingArea as the final destination. 
# The vehicle route never passes the original parking edge
newDestination2

# the replaced parking area appears in the beginning and the end. Replacing the first stop should preserve the destination.
keepDestination_looped

# handle the case where the length of parking spaces is not given and cannot by deduced from roadside capacity because that is 0
default_length

# do not reroute to parkingAreas which are too close to brake
skip_too_close

# when rerouting, take subsequent stops into account
subsequent_stops

# check subsequent stops and their lane position relative to the new parkingArea
subsequent_stop_requires_loop

# check reroute handling with parking.meneuver and vtype configuration of maneuverAngleTimes
maneuver_reroute

# parkingReroute is triggered on the insertion edge, insertion is delayed. Should not crash (#6705)
reroute_insertion_delayed

# test slope for parking vehicles 
roadside_slope

# reroute full parking (see #8338)
reroute_fullparking

# vehicle moves passed rerouter edge in a single step (#9780)
reroute_on_junction

# test what happens if brakeGap prevents the vehicle from taken the first free space.
brakeGap_beyond_firstSpace
