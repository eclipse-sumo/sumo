# Tests parsing of stopOffsets (lane / edge child elements)
stopOffsets

# Tests for using types
types

# Tests for using types
node_types

# test loading of different traffic light types
tl_types
tl_layouts

# tests for using the speed_in_kmh option
speed_in_kmh

# tests whether import of shapes is functioning
shapes

# tests whether connections are processed
connections

# tests whether lane expansions work
lane_expansion

# splitting edges in an additional file
add_split

# tests whether vclass import works
vclasses

# tests whether overwriting earlier loaded node attributes works
node_overwrite

# tests whether overwriting earlier loaded edge attributes works
edge_overwrite

# Tests for setting an offset
offset

# Tests for setting friction
friction

# Load a diff to a sumo network (along with the network)
# to rebuild the diff files call
# $SUMO_HOME/tools/net/netdiff.py input_net.net.xml net.netconvert input_plain
diff

# testing error input and handling
errors

# tests related to 3D Positions
3D

# test  explicit lane change prohibitions
prohibit_changing

# Load a tls.xml along with a sumo net to modify the program. 
# This also demonstrates how identical phases are joined.
alter_tls_program

# tests for the generated junction logic
junctionLogic

# tests for roundabouts specified via xml
roundabout
connection_guessing

# test load public transport related files
public_transport

# check classification of link direction
link_direction

# declare bidi edges
bidi

# declared edge length should be writen back into the plain-output
loaded_length

# declared lane specific width should appear in net and plain output
lane_based_width

# declared lane specific speed should appear in net and plain output
lane_based_speed

# lane type information should appear in xml and net.xml output
lane_type

# load location attribute from nod.xml and use it for the generated net
load_location

# import edge distance from plain xml
distance

# import junction name from plain xml
junction_name

# import params from plain xml
params

# test special characters in edge ids
special_chars

# write plain output will all lane data
plainLanes

# merge 2 geo-referenced networks
merge_geo

# merge 2 geo-referenced networks	with exlicit location data in edges file
merge_geo2
