# tests for importing railway networks
railway

# export public transport stops or lines
public_transport
maxspeed
turn_lanes

# creating opposite-direction edge due to sidewalk information
sidewalks

# Area around the ITS in Berlin, Adlershof (13.52494,52.42582,13.53625,52.43026)
adlershof_dlr
adlershof_dlr_discard-tls

# Area around the ITS in Berlin, Adlershof (13.52494,52.42582,13.53625,52.43026)
adlershof_orig_names

# In this scenario, two nodes with the same coordinates start the shape of an edge. The scenario also tests traffic signals and isolated roads.
duplicate_nodes

# Tests the robustness of the parser with a defective OSM file
osm_parser

# Checks for false joining of two edges into one
false_edge_join

# OSM allows edges which are used by multiple modes at the same time (i.e. tram/cars). The imported edge should still be allowed for all listed modes
multimodal_edge

# an edge with multiple mode definitions should be discarded if all individual modes are set to be discarded
multimodal_edge_discard

# when a list of lane numbers is given, use the minimum value 
# (larger values are probably short turning lanes)
key_lanes_non_numerical
way_with_with_insufficient_nodes
way_with_selfloop
turning_restrictions

# test handling various problems with osm input files
recoverable_errors

# import elevation data
elevation

# add sidewalks to appropriate edges
adlershof_dlr_sidewalks

# add sidewalks from raw data (rather than from typemap heuristic)
adlershof_dlr_sidewalks_option

# check for working around a xerces transcoding bug
xerces_bug_1947

# import dedicated bicycle lanes 
bicycle_lanes
bus_lanes
intersection_with_crossings

# Area around the ITS in Berlin, Adlershof (13.52494,52.42582,13.53625,52.43026)
numerical_ids
max_segment_length

# see #3412
difficult_geometry

# see #3715
complex_intermodal_intersection

# use osm types for determining FRC (functional road class)
dlr_navteq

# extended attributes like surface
dlr_navteq_version

# test import of geo-referenced lefthand network
geo_from_osm

# a complex example where bypass edges should not be joined
bypass

# a complex example where bypass edges should not be joined
bypass2

# a complex example where bypass edges should not be joined
bypass3

# importing all osm tags
all-attributes

# importing selected extra OSM tags
extra-attributes

# test option edges.join-tram-dist
join_tram

# test option edges.join-tram-dist (no tram lines in input)
join_tram2

# test option edges.join-tram-dist, tram way is tagged with psv=designated
join_tram3
ticket8155_orig

# import vehicle:lanes, vehicle:lanes:forward, vehicle:lanes:backward
vehicle_lanes
motorway_ramp_prohibitChange

# bike and bus and vehicle lane access
vehicle_lanes2

# change default to roadCenter
spreadType

# additional bike access
bike_access

# additional bike access with oneway bikes
oneway_bike

# complex intermodal junction in Brunswick
tostmannplatz

# import key junction=circular
junction_circular

# one incoming arm doesn't have a tls but the central junction should still be considered as controlled
guess-signals.slack
restrictionException_only

# Copy of restrictionException_only
restrictionException_no

# example network from Zuerich
oerlikon
width_lane
crossings

# see #14786
crossings_no_barrier
bugs
