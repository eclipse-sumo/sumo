Eclipse SUMO netconvert Version v1_20_0+1963-cf76c26275c
 Copyright (C) 2001-2024 German Aerospace Center (DLR) and others; https://sumo.dlr.de
Network importer / builder for the microscopic, multi-modal traffic simulation
 SUMO.

Usage: netconvert [OPTION]*
Configuration Options:
  -c, --configuration-file FILE        Loads the named config on startup
  -C, --save-configuration FILE        Saves current configuration into FILE
  --save-configuration.relative        Enforce relative paths when saving the
                                        configuration
  --save-template FILE                 Saves a configuration template (empty)
                                        into FILE
  --save-schema FILE                   Saves the configuration schema into FILE
  --save-commented                     Adds comments to saved template,
                                        configuration, or schema

Input Options:
  -s, --sumo-net-file FILE             Read SUMO-net from FILE
  -n, --node-files FILE                Read XML-node defs from FILE
  -e, --edge-files FILE                Read XML-edge defs from FILE
  -x, --connection-files FILE          Read XML-connection defs from FILE
  -i, --tllogic-files FILE             Read XML-traffic light defs from FILE
  -t, --type-files FILE                Read XML-type defs from FILE
  --ptstop-files FILE                  Reads public transport stops from FILE
  --ptline-files FILE                  Reads public transport lines from FILE
  --polygon-files FILE                 Reads polygons from FILE for embedding
                                        in network where applicable
  --shapefile-prefix FILE              Read shapefiles (ArcView, Tiger, ...)
                                        from files starting with 'FILE'
  --dlr-navteq-prefix FILE             Read converted Navteq GDF data
                                        (unsplitted Elmar-network) from path
                                        'FILE'
  --osm-files FILE                     Read OSM-network from path 'FILE(s)'
  --opendrive-files FILE               Read OpenDRIVE-network from FILE
  --visum-file FILE                    Read VISUM-net from FILE
  --vissim-file FILE                   Read VISSIM-net from FILE
  --robocup-dir FILE                   Read RoboCup-net from DIR
  --matsim-files FILE                  Read MATsim-net from FILE
  --itsumo-files FILE                  Read ITSUMO-net from FILE
  --heightmap.shapefiles FILE          Read heightmap from ArcGIS shapefile
  --heightmap.geotiff FILE             Read heightmap from GeoTIFF

Output Options:
  --write-license                      Include license info into every output
                                        file
  --output-prefix STR                  Prefix which is applied to all output
                                        files. The special string 'TIME' is
                                        replaced by the current time.
  --precision INT                      Defines the number of digits after the
                                        comma for floating point output
  --precision.geo INT                  Defines the number of digits after the
                                        comma for lon,lat output
  -H, --human-readable-time            Write time values as hour:minute:second
                                        or day:hour:minute:second rather than
                                        seconds
  -o, --output-file FILE               The generated net will be written to
                                        FILE
  -p, --plain-output-prefix FILE       Prefix of files to write plain xml
                                        nodes, edges and connections to
  --plain-output.lanes                 Write all lanes and their attributes
                                        even when they are not customized
  --junctions.join-output FILE         Writes information about joined
                                        junctions to FILE (can be loaded as
                                        additional node-file to reproduce joins
  --prefix STR                         Defines a prefix for edge and junction
                                        names
  --amitran-output FILE                The generated net will be written to
                                        FILE using Amitran format
  --matsim-output FILE                 The generated net will be written to
                                        FILE using MATsim format
  --opendrive-output FILE              The generated net will be written to
                                        FILE using OpenDRIVE format
  --dlr-navteq-output FILE             The generated net will be written to
                                        dlr-navteq files with the given PREFIX
  --dlr-navteq.version STR             The dlr-navteq output format version to
                                        write
  --dlr-navteq.precision INT           The network coordinates are written with
                                        the specified level of output precision
  --output.street-names                Street names will be included in the
                                        output (if available)
  --output.original-names              Writes original names, if given, as
                                        parameter
  --street-sign-output FILE            Writes street signs as POIs to FILE
  --ptstop-output FILE                 Writes public transport stops to FILE
  --ptline-output FILE                 Writes public transport lines to FILE
  --ptline-clean-up                    Clean-up pt stops that are not served by
                                        any line
  --parking-output FILE                Writes parking areas to FILE
  --railway.topology.output FILE       Analyze topology of the railway network
  --polygon-output FILE                Write shapes that are embedded in the
                                        network input and that are not supported
                                        by polyconvert (OpenDRIVE)
  --opendrive-output.straight-threshold FLOAT  Builds parameterized curves
                                        whenever the angular change between
                                        straight segments exceeds FLOAT degrees
  --opendrive-output.lefthand-left     Write lanes in lefthand networks on the
                                        left side (positive indices)
  --opendrive-output.shape-match-dist FLOAT  Match loaded shapes to the closest
                                        edge within FLOAT and export as road
                                        objects

Projection Options:
  --simple-projection                  Uses a simple method for projection
  --proj.scale FLOAT                   Scaling factor for input coordinates
  --proj.rotate FLOAT                  Rotation (clockwise degrees) for input
                                        coordinates
  --proj.utm                           Determine the UTM zone (for a universal
                                        transversal mercator projection based on
                                        the WGS84 ellipsoid)
  --proj.dhdn                          Determine the DHDN zone (for a
                                        transversal mercator projection based on
                                        the bessel ellipsoid, "Gauss-Krueger")
  --proj STR                           Uses STR as proj.4 definition for
                                        projection
  --proj.inverse                       Inverses projection
  --proj.dhdnutm                       Convert from Gauss-Krueger to UTM
  --proj.plain-geo                     Write geo coordinates in plain-xml

Processing Options:
  --speed-in-kmh                       vmax is parsed as given in km/h
  --construction-date STR              Use YYYY-MM-DD date to determine the
                                        readiness of features under construction
  --flatten                            Remove all z-data
  --plain.extend-edge-shape            If edge shapes do not end at the node
                                        positions, extend them
  --numerical-ids                      Remaps alphanumerical IDs of nodes and
                                        edges to ensure that all IDs are
                                        integers
  --numerical-ids.node-start INT       Remaps IDs of nodes to integers starting
                                        at INT
  --numerical-ids.edge-start INT       Remaps IDs of edges to integers starting
                                        at INT
  --reserved-ids FILE                  Ensures that generated ids do not
                                        included any of the typed IDs from FILE
                                        (sumo-gui selection file format)
  --dismiss-vclasses                   Removes vehicle class restrictions from
                                        imported edges
  --geometry.split                     Splits edges across geometry nodes
  -R, --geometry.remove                Replace nodes which only define edge
                                        geometry by geometry points (joins
                                        edges)
  --geometry.remove.keep-edges.explicit STR[]  Ensure that the given list of
                                        edges is not modified
  --geometry.remove.keep-edges.input-file FILE  Ensure that the edges in FILE
                                        are not modified (Each id on a single
                                        line. Selection files from sumo-gui are
                                        also supported)
  --geometry.remove.keep-ptstops       Ensure that edges with public transport
                                        stops are not modified
  --geometry.remove.min-length FLOAT   Allow merging edges with differing
                                        attributes when their length is below
                                        min-length
  --geometry.remove.width-tolerance FLOAT  Allow merging edges with differing
                                        lane widths if the difference is below
                                        FLOAT
  --geometry.remove.max-junction-size FLOAT  Prevent removal of junctions with
                                        a size above FLOAT as defined by custom
                                        edge endpoints
  --geometry.max-segment-length FLOAT  splits geometry to restrict segment
                                        length
  --geometry.min-dist FLOAT            reduces too similar geometry points
  --geometry.max-angle FLOAT           Warn about edge geometries with an angle
                                        above DEGREES in successive segments
  --geometry.max-angle.fix             Straighten edge geometries with an angle
                                        above max-angle successive segments
  --geometry.min-radius FLOAT          Warn about edge geometries with a
                                        turning radius less than METERS at the
                                        start or end
  --geometry.min-radius.fix            Straighten edge geometries to avoid
                                        turning radii less than
                                        geometry.min-radius
  --geometry.min-radius.fix.railways   Straighten edge geometries to avoid
                                        turning radii less than
                                        geometry.min-radius (only railways)
  --geometry.junction-mismatch-threshold FLOAT  Warn if the junction shape is
                                        to far away from the original node
                                        position
  --geometry.check-overlap FLOAT       Warn if edges overlap by more than the
                                        given threshold value
  --geometry.check-overlap.vertical-threshold FLOAT  Ignore overlapping edges
                                        if they are separated vertically by the
                                        given threshold.
  --geometry.avoid-overlap             Modify edge geometries to avoid overlap
                                        at junctions
  --join-lanes                         join adjacent lanes that have the same
                                        permissions and which do not admit
                                        lane-changing (sidewalks and disallowed
                                        lanes)
  --ptline.match-dist FLOAT            Matches stops outside the road network
                                        to the referencing pt line when below
                                        the given distance
  --ptstop-output.no-bidi              Skips automatic generation of stops on
                                        the bidi-edge of a loaded stop
  --geometry.max-grade FLOAT           Warn about edge geometries with a grade
                                        in % above FLOAT.
  --geometry.max-grade.fix             Smooth edge geometries with a grade
                                        above the warning threshold.
  --offset.disable-normalization       Turn off normalizing node positions
  --offset.x FLOAT                     Adds FLOAT to net x-positions
  --offset.y FLOAT                     Adds FLOAT to net y-positions
  --offset.z FLOAT                     Adds FLOAT to net z-positions
  --flip-y-axis                        Flips the y-coordinate along zero
  --roundabouts.guess                  Enable roundabout-guessing
  --roundabouts.guess.max-length FLOAT  Structures with a circumference above
                                        FLOAT threshold are not classified as
                                        roundabout
  --roundabouts.visibility-distance FLOAT  Default visibility when approaching
                                        a roundabout
  --opposites.guess                    Enable guessing of opposite direction
                                        lanes usable for overtaking
  --opposites.guess.fix-lengths        Ensure that opposite edges have the same
                                        length
  --fringe.guess                       Enable guessing of network fringe nodes
  --fringe.guess.speed-threshold FLOAT  Guess disconnected edges above the given
                                        speed as outer fringe
  --lefthand                           Assumes left-hand traffic on the network
  --edges.join                         Merges edges which connect the same
                                        nodes and are close to each other
                                        (recommended for VISSIM import)
  --speed.offset FLOAT                 Modifies all edge speeds by adding FLOAT
  --speed.factor FLOAT                 Modifies all edge speeds by multiplying
                                        by FLOAT
  --speed.minimum FLOAT                Modifies all edge speeds to at least
                                        FLOAT
  --edges.join-tram-dist FLOAT         Joins tram edges into road lanes with
                                        similar geometry (within FLOAT distance)

Building Defaults Options:
  -L, --default.lanenumber INT         The default number of lanes in an edge
  --default.lanewidth FLOAT            The default width of lanes
  --default.spreadtype STR             The default method for computing lane
                                        shapes from edge shapes
  -S, --default.speed FLOAT            The default speed on an edge (in m/s)
  --default.friction FLOAT             The default friction on an edge
  -P, --default.priority INT           The default priority of an edge
  --default.type STR                   The default edge type
  --default.sidewalk-width FLOAT       The default width of added sidewalks
  --default.bikelane-width FLOAT       The default width of added bike lanes
  --default.crossing-width FLOAT       The default width of a pedestrian
                                        crossing
  --default.crossing-speed FLOAT       The default speed 'limit' on a
                                        pedestrian crossing (in m/s)
  --default.walkingarea-speed FLOAT    The default speed 'limit' on a
                                        pedestrian walkingarea (in m/s)
  --default.allow STR                  The default for allowed vehicle classes
  --default.disallow STR               The default for disallowed vehicle
                                        classes
  --default.junctions.keep-clear       Whether junctions should be kept clear
                                        by default
  --default.junctions.radius FLOAT     The default turning radius of
                                        intersections
  --default.connection-length FLOAT    The default length when overriding
                                        connection lengths
  --default.connection.cont-pos FLOAT  Whether/where connections should have an
                                        internal junction
  --default.right-of-way STR           The default algorithm for computing
                                        right of way rules ('default',
                                        'edgePriority')

TLS Building Options:
  --tls.discard-loaded                 Does not instantiate traffic lights
                                        loaded from other formats than plain-XML
  --tls.discard-simple                 Does not instantiate traffic lights at
                                        geometry-like nodes loaded from other
                                        formats than plain-XML
  --tls.set STR[]                      Interprets STR[] as list of junctions to
                                        be controlled by TLS
  --tls.unset STR[]                    Interprets STR[] as list of junctions to
                                        be not controlled by TLS
  --tls.guess                          Turns on TLS guessing
  --tls.guess.threshold FLOAT          Sets minimum value for the sum of all
                                        incoming lane speeds when guessing TLS
  --tls.taz-nodes                      Sets district nodes as tls-controlled
  --tls.guess.joining                  Includes node clusters into guess
  --tls.join                           Tries to cluster tls-controlled nodes
  --tls.join-dist FLOAT                Determines the maximal distance for
                                        joining traffic lights (defaults to 20)
  --tls.join-exclude STR[]             Interprets STR[] as list of tls ids to
                                        exclude from joining
  --tls.uncontrolled-within            Do not control edges that lie fully
                                        within a joined traffic light. This may
                                        cause collisions but allows old traffic
                                        light plans to be used
  --tls.ignore-internal-junction-jam   Do not build mutually conflicting
                                        response matrix, potentially ignoring
                                        vehicles that are stuck at an internal
                                        junction when their phase has ended
  --tls.guess-signals                  Interprets tls nodes surrounding an
                                        intersection as signal positions for a
                                        larger TLS. This is typical pattern for
                                        OSM-derived networks
  --tls.guess-signals.dist FLOAT       Distance for interpreting nodes as
                                        signal locations
  --tls.guess-signals.slack INT        Number of uncontrolled entry edges to
                                        accept and still consider the central
                                        node as a traffic light
  --tls.cycle.time INT                 Use INT as cycle duration
  --tls.green.time INT                 Use INT as green phase duration
  -D, --tls.yellow.min-decel FLOAT     Defines smallest vehicle deceleration
  --tls.yellow.patch-small             Given yellow times are patched even if
                                        being too short
  --tls.yellow.time INT                Set INT as fixed time for yellow phase
                                        durations
  --tls.red.time INT                   Set INT as fixed time for red phase
                                        duration at traffic lights that do not
                                        have a conflicting flow
  --tls.allred.time INT                Set INT as fixed time for intermediate
                                        red phase after every switch
  --tls.minor-left.max-speed FLOAT     Use FLOAT as threshold for allowing
                                        left-turning vehicles to move in the
                                        same phase as oncoming straight-going
                                        vehicles
  --tls.left-green.time INT            Use INT as green phase duration for left
                                        turns (s). Setting this value to 0
                                        disables additional left-turning phases
  --tls.nema.vehExt INT                Set INT as fixed time for intermediate
                                        vehext phase after every switch
  --tls.nema.yellow INT                Set INT as fixed time for intermediate
                                        NEMA yellow phase after every switch
  --tls.nema.red INT                   Set INT as fixed time for intermediate
                                        NEMA red phase after every switch
  --tls.crossing-min.time INT          Use INT as minimum green duration for
                                        pedestrian crossings (s).
  --tls.crossing-clearance.time INT    Use INT as clearance time for pedestrian
                                        crossings (s).
  --tls.scramble.time INT              Use INT as green phase duration for
                                        pedestrian scramble phase (s).
  --tls.half-offset STR[]              TLSs in STR[] will be shifted by
                                        half-phase
  --tls.quarter-offset STR[]           TLSs in STR[] will be shifted by
                                        quarter-phase
  --tls.default-type STR               TLSs with unspecified type will use STR
                                        as their algorithm
  --tls.layout STR                     Set phase layout four grouping opposite
                                        directions or grouping all movements for
                                        one incoming edge ['opposites',
                                        'incoming']
  --tls.no-mixed                       Avoid phases with green and red signals
                                        for different connections from the same
                                        lane
  --tls.min-dur INT                    Default minimum phase duration for
                                        traffic lights with variable phase
                                        length
  --tls.max-dur INT                    Default maximum phase duration for
                                        traffic lights with variable phase
                                        length
  --tls.group-signals                  Assign the same tls link index to
                                        connections that share the same states
  --tls.ungroup-signals                Assign a distinct tls link index to
                                        every connection
  --tls.rebuild                        rebuild all traffic light plans in the
                                        network

Ramp Guessing Options:
  --ramps.guess                        Enable ramp-guessing
  --ramps.guess-acceleration-lanes     Guess on-ramps and mark acceleration
                                        lanes if they exist but do not add new
                                        lanes
  --ramps.max-ramp-speed FLOAT         Treat edges with speed > FLOAT as no
                                        ramps
  --ramps.min-highway-speed FLOAT      Treat edges with speed < FLOAT as no
                                        highways
  --ramps.ramp-length FLOAT            Use FLOAT as ramp-length
  --ramps.min-weave-length FLOAT       Use FLOAT as minimum ramp-length
  --ramps.set STR[]                    Tries to handle the given edges as ramps
  --ramps.unset STR[]                  Do not consider the given edges as ramps
  --ramps.no-split                     Avoids edge splitting

Edge Removal Options:
  --keep-edges.min-speed FLOAT         Only keep edges with speed in
                                        meters/second > FLOAT
  --remove-edges.explicit STR[]        Remove edges in STR[]
  --keep-edges.explicit STR[]          Only keep edges in STR[] or those which
                                        are kept due to other keep-edges or
                                        remove-edges options
  --keep-edges.input-file FILE         Only keep edges in FILE (Each id on a
                                        single line. Selection files from
                                        sumo-gui are also supported) or those
                                        which are kept due to other keep-edges
                                        or remove-edges options
  --remove-edges.input-file FILE       Remove edges in FILE. (Each id on a
                                        single line. Selection files from
                                        sumo-gui are also supported)
  --keep-edges.postload                Remove edges after loading, patching and
                                        joining
  --keep-edges.in-boundary STR[]       Only keep edges which are located within
                                        the given boundary (given either as
                                        CARTESIAN corner coordinates
                                        <xmin,ymin,xmax,ymax> or as polygon
                                        <x0,y0,x1,y1,...>)
  --keep-edges.in-geo-boundary STR[]   Only keep edges which are located within
                                        the given boundary (given either as
                                        GEODETIC corner coordinates
                                        <lon-min,lat-min,lon-max,lat-max> or as
                                        polygon <lon0,lat0,lon1,lat1,...>)
  --keep-edges.by-vclass STR[]         Only keep edges which allow one of the
                                        vclasses in STR[]
  --remove-edges.by-vclass STR[]       Remove edges which allow only vclasses
                                        from STR[]
  --keep-edges.by-type STR[]           Only keep edges where type is in STR[]
  --keep-edges.components INT          Only keep the INT largest weakly
                                        connected components
  --remove-edges.by-type STR[]         Remove edges where type is in STR[]
  --remove-edges.isolated              Removes isolated edges
  --keep-lanes.min-width FLOAT         Only keep lanes with width in meters >
                                        FLOAT

Unregulated Nodes Options:
  --keep-nodes-unregulated             All nodes will be unregulated
  --keep-nodes-unregulated.explicit STR[]  Do not regulate nodes in STR[]
  --keep-nodes-unregulated.district-nodes  Do not regulate district nodes

Junctions Options:
  --junctions.right-before-left.speed-threshold FLOAT  Allow building
                                        right-before-left junctions when the
                                        incoming edge speeds are below FLOAT
                                        (m/s)
  --junctions.left-before-right        Build left-before-right junctions
                                        instead of right-before-left junctions
  --no-internal-links                  Omits internal links
  --no-turnarounds                     Disables building turnarounds
  --no-turnarounds.tls                 Disables building turnarounds at
                                        tls-controlled junctions
  --no-turnarounds.geometry            Disables building turnarounds at
                                        geometry-like junctions
  --no-turnarounds.except-deadend      Disables building turnarounds except at
                                        dead end junctions
  --no-turnarounds.except-turnlane     Disables building turnarounds except at
                                        at junctions with a dedicated turning
                                        lane
  --no-turnarounds.fringe              Disables building turnarounds at fringe
                                        junctions
  --no-left-connections                Disables building connections to left
  --junctions.join                     Joins junctions that are close to each
                                        other (recommended for OSM import)
  --junctions.join-dist FLOAT          Determines the maximal distance for
                                        joining junctions (defaults to 10)
  --junctions.join-exclude STR[]       Interprets STR[] as list of junctions to
                                        exclude from joining
  --junctions.join-same                Joins junctions that have the same
                                        coordinates even if not connected
  --max-join-ids INT                   Abbreviate junction or TLS id if it
                                        joins more than INT junctions
  --junctions.corner-detail INT        Generate INT intermediate points to
                                        smooth out intersection corners
  --junctions.internal-link-detail INT  Generate INT intermediate points to
                                        smooth out lanes within the intersection
  --junctions.scurve-stretch FLOAT     Generate longer intersections to allow
                                        for smooth s-curves when the number of
                                        lanes changes
  --junctions.join-turns               Builds common edges for turning
                                        connections with common from- and
                                        to-edge. This causes discrepancies
                                        between geometrical length and assigned
                                        length due to averaging but enables
                                        lane-changing while turning
  --junctions.limit-turn-speed FLOAT   Limits speed on junctions to an average
                                        lateral acceleration of at most FLOAT
                                        (m/s^2)
  --junctions.limit-turn-speed.min-angle FLOAT  Do not limit turn speed for
                                        angular changes below FLOAT (degrees).
                                        The value is subtracted from the
                                        geometric angle before computing the
                                        turning radius.
  --junctions.limit-turn-speed.min-angle.railway FLOAT  Do not limit turn speed
                                        for angular changes below FLOAT
                                        (degrees) on railway edges. The value is
                                        subtracted from the geometric angle
                                        before computing the turning radius.
  --junctions.limit-turn-speed.warn.straight FLOAT  Warn about turn speed
                                        limits that reduce the speed of straight
                                        connections by more than FLOAT
  --junctions.limit-turn-speed.warn.turn FLOAT  Warn about turn speed limits
                                        that reduce the speed of turning
                                        connections (no u-turns) by more than
                                        FLOAT
  --junctions.small-radius FLOAT       Default radius for junctions that do not
                                        require wide vehicle turns
  --junctions.higher-speed             Use maximum value of incoming and
                                        outgoing edge speed on junction instead
                                        of average
  --junctions.minimal-shape            Build junctions with minimal shapes
                                        (ignoring edge overlap)
  --junctions.endpoint-shape           Build junction shapes based on edge
                                        endpoints (ignoring edge overlap)
  --internal-junctions.vehicle-width FLOAT  Assumed vehicle width for computing
                                        internal junction positions
  --rectangular-lane-cut               Forces rectangular cuts between lanes
                                        and intersections
  --check-lane-foes.roundabout         Allow driving onto a multi-lane road if
                                        there are foes on other lanes (at
                                        roundabouts)
  --check-lane-foes.all                Allow driving onto a multi-lane road if
                                        there are foes on other lanes
                                        (everywhere)

Pedestrian Options:
  --sidewalks.guess                    Guess pedestrian sidewalks based on edge
                                        speed
  --sidewalks.guess.max-speed FLOAT    Add sidewalks for edges with a speed
                                        equal or below the given limit
  --sidewalks.guess.min-speed FLOAT    Add sidewalks for edges with a speed
                                        above the given limit
  --sidewalks.guess.from-permissions   Add sidewalks for edges that allow
                                        pedestrians on any of their lanes
                                        regardless of speed
  --sidewalks.guess.exclude STR[]      Do not guess sidewalks for the given
                                        list of edges
  --crossings.guess                    Guess pedestrian crossings based on the
                                        presence of sidewalks
  --crossings.guess.speed-threshold FLOAT  At uncontrolled nodes, do not build
                                        crossings across edges with a speed
                                        above the threshold
  --walkingareas                       Always build walking areas even if there
                                        are no crossings
  --walkingareas.join-dist FLOAT       Do not create a walkingarea between
                                        sidewalks that are connected by a
                                        pedestrian junction within FLOAT

Bicycle Options:
  --bikelanes.guess                    Guess bike lanes based on edge speed
  --bikelanes.guess.max-speed FLOAT    Add bike lanes for edges with a speed
                                        equal or below the given limit
  --bikelanes.guess.min-speed FLOAT    Add bike lanes for edges with a speed
                                        above the given limit
  --bikelanes.guess.from-permissions   Add bike lanes for edges that allow
                                        bicycles on any of their lanes
                                        regardless of speed
  --bikelanes.guess.exclude STR[]      Do not guess bikelanes for the given
                                        list of edges

Railway Options:
  --railway.signals.discard            Discard all railway signal information
                                        loaded from other formats than plain-xml
  --railway.topology.repair            Repair topology of the railway network
  --railway.topology.repair.minimal    Repair topology of the railway network
                                        just enough to let loaded public
                                        transport lines to work
  --railway.topology.repair.connect-straight  Allow bidirectional rail use
                                        wherever rails with opposite directions
                                        meet at a straight angle
  --railway.topology.repair.stop-turn  Add turn-around connections at all
                                        loaded stops.
  --railway.topology.repair.bidi-penalty FLOAT  Penalty factor for adding new
                                        bidi edges to connect public transport
                                        stops
  --railway.topology.all-bidi          Make all rails usable in both direction
  --railway.topology.all-bidi.input-file FILE  Make all rails edge ids from
                                        FILE usable in both direction
  --railway.topology.direction-priority  Set edge priority values based on
                                        estimated main direction
  --railway.topology.extend-priority   Extend loaded edge priority values based
                                        on estimated main direction
  --railway.geometry.straighten        Move junctions to straighten a sequence
                                        of rail edges
  --railway.signal.guess.by-stops      Guess signals that guard public
                                        transport stops
  --railway.access-distance FLOAT      The search radius for finding suitable
                                        road accesses for rail stops
  --railway.max-accesses INT           The maximum road accesses registered per
                                        rail stops
  --railway.access-factor FLOAT        The walking length of the access is
                                        computed as air-line distance multiplied
                                        by FLOAT

Formats Options:
  --discard-params STR[]               Remove the list of keys from all params
  --ignore-change-restrictions STR[]   List vehicle classes that may ignore
                                        lane changing restrictions ('all'
                                        discards all restrictions)
  --ignore-widths                      Whether lane widths shall be ignored.
  --osm.skip-duplicates-check          Skips the check for duplicate nodes and
                                        edges
  --osm.elevation                      Imports elevation data
  --osm.layer-elevation FLOAT          Reconstruct (relative) elevation based
                                        on layer data. Each layer is raised by
                                        FLOAT m
  --osm.layer-elevation.max-grade FLOAT  Maximum grade threshold in % at 50km/h
                                        when reconstructing elevation based on
                                        layer data. The value is scaled
                                        according to road speed.
  --osm.oneway-spread-right            Whether one-way roads should be spread
                                        to the side instead of centered
  --osm.lane-access                    Import lane-specific access restrictions
  --osm.bike-access                    Import bike lanes and fix directions and
                                        permissions on bike paths
  --osm.sidewalks                      Import sidewalks
  --osm.crossings                      Import crossings
  --osm.turn-lanes                     Import turning arrows from OSM to help
                                        with connection building
  --osm.stop-output.length FLOAT       The default length of a public transport
                                        stop in FLOAT m
  --osm.stop-output.length.bus FLOAT   The default length of a bus stop in
                                        FLOAT m
  --osm.stop-output.length.tram FLOAT  The default length of a tram stop in
                                        FLOAT m
  --osm.stop-output.length.train FLOAT  The default length of a train stop in
                                        FLOAT m
  --osm.railsignals STR[]              Specify custom rules for importing
                                        railway signals
  --osm.all-attributes                 Whether additional attributes shall be
                                        imported
  --osm.extra-attributes STR[]         List of additional attributes that shall
                                        be imported from OSM via
                                        osm.all-attributes (set 'all' to import
                                        all)
  --osm.speedlimit-none FLOAT          The speed limit to be set when there is
                                        no actual speed limit in reality
  --matsim.keep-length                 The edge lengths given in the
                                        MATSIM-file will be kept
  --matsim.lanes-from-capacity         The lane number will be computed from
                                        the capacity
  --shapefile.street-id STR            Read edge ids from column STR
  --shapefile.from-id STR              Read from-node ids from column STR
  --shapefile.to-id STR                Read to-node ids from column STR
  --shapefile.type-id STR              Read type ids from column STR
  --shapefile.laneNumber STR           Read lane number from column STR
  --shapefile.speed STR                Read speed from column STR
  --shapefile.length STR               Read custom edge length from column STR
  --shapefile.width STR                Read total edge width from column STR
  --shapefile.name STR                 Read (non-unique) name from column STR
  --shapefile.node-join-dist FLOAT     Distance threshold for determining
                                        whether distinct shapes are connected
                                        (used when from-id and to-id are not
                                        available)
  --shapefile.add-params STR[]         Add the list of field names as edge
                                        params
  --shapefile.use-defaults-on-failure  Uses edge type defaults on problems
  --shapefile.all-bidirectional        Insert edges in both directions
  --shapefile.guess-projection         Guess the proper projection
  --shapefile.traditional-axis-mapping  Use traditional axis order (lon, lat)
  --dlr-navteq.tolerant-permissions    Allow more vehicle classes by default
  --dlr-navteq.keep-length             The edge lengths given in the DLR
                                        Navteq-file will be kept
  --vissim.join-distance FLOAT         Structure join offset
  --vissim.default-speed FLOAT         Use FLOAT as default speed
  --vissim.speed-norm FLOAT            Factor for edge velocity
  --vissim.report-unset-speeds         Writes lanes without an explicit speed
                                        set
  --visum.language-file FILE           Load language mappings from FILE
  --visum.use-type-priority            Uses priorities from types
  --visum.use-type-laneno              Uses lane numbers from types
  --visum.use-type-speed               Uses speeds from types
  --visum.connector-speeds FLOAT       Sets connector speed
  --visum.connectors-lane-number INT   Sets connector lane number
  --visum.no-connectors                Excludes connectors
  --visum.recompute-lane-number        Computes the number of lanes from the
                                        edges' capacities
  --visum.verbose-warnings             Prints all warnings, some of which are
                                        due to VISUM misbehaviour
  --visum.lanes-from-capacity.norm FLOAT  The factor for flow to no. lanes
                                        conversion
  --opendrive.import-all-lanes         Imports all lane types
  --opendrive.curve-resolution FLOAT   The geometry resolution in m when
                                        importing curved geometries as line
                                        segments.
  --opendrive.advance-stopline FLOAT   Allow stop lines to be built beyond the
                                        start of the junction if the geometries
                                        allow so
  --opendrive.min-width FLOAT          The minimum lane width for determining
                                        start or end of variable-width lanes
  --opendrive.internal-shapes          Import internal lane shapes
  --opendrive.position-ids             Sets edge-id based on road-id and offset
                                        in m (legacy)
  --opendrive.lane-shapes              Use custom lane shapes to compensate
                                        discarded lane types
  --opendrive.signal-groups            Use the OpenDRIVE controller information
                                        for the generated signal program
  --opendrive.ignore-misplaced-signals  Ignore traffic signals which do not
                                        control any driving lane

Report Options:
  -v, --verbose                        Switches to verbose output
  --print-options                      Prints option values before processing
  -?, --help                           Prints this screen or selected topics
  -V, --version                        Prints the current version
  -X, --xml-validation STR             Set schema validation scheme of XML
                                        inputs ("never", "local", "auto" or
                                        "always")
  --xml-validation.net STR             Set schema validation scheme of SUMO
                                        network inputs ("never", "local", "auto"
                                        or "always")
  -W, --no-warnings                    Disables output of warnings
  --aggregate-warnings INT             Aggregate warnings of the same type
                                        whenever more than INT occur
  -l, --log FILE                       Writes all messages to FILE (implies
                                        verbose)
  --message-log FILE                   Writes all non-error messages to FILE
                                        (implies verbose)
  --error-log FILE                     Writes all warnings and errors to FILE
  --log.timestamps                     Writes timestamps in front of all
                                        messages
  --log.processid                      Writes process ID in front of all
                                        messages
  --language STR                       Language to use in messages
  --ignore-errors                      Continue on broken input
  --ignore-errors.connections          Continue on invalid connections
  --show-errors.connections-first-try  Show errors in connections at parsing
  --ignore-errors.edge-type            Continue on unknown edge types

Random Number Options:
  --random                             Initialises the random number generator
                                        with the current system time
  --seed INT                           Initialises the random number generator
                                        with the given value


Examples:
  netconvert -c <CONFIGURATION>
    generate net with options read from file
  netconvert -n ./nodes.xml -e ./edges.xml -v -t ./owntypes.xml
    generate net with given nodes, edges, and edge types doing verbose output

Report bugs at <https://github.com/eclipse-sumo/sumo/issues>.
Get in contact via <sumo@dlr.de>.
