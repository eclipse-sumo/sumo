synthetic

# Copy of synthetic
synthetic_connectStraight
connectStraight

# tests for extending existing bidi-edges
extendBidi

# some edges marked as buffer stops via <param>
buffers

# some edges marked as buffer stops via <param>
buffers_connectStraight

# add bidirectional edges between switches
switches

# add bidirectional edges at disconnected stops
stops
stops_disableConnectionRepair

# add bidirectional edges at disconnected stops
stops_onlyConnectionRepair

# repair connectivity for ptlines but read them from flows/routes
stops_ptline_flows

# repair connectivity for ptlines but read them from trips/routes
stops_ptline_trips

# add bidirectional edges at disconnected stops (like test 'stops' but every direction reversed)
stops_reversed

# no edges must be added before stops because the buffer_stop heuristc already fixes the network
# 
stops_buffer

# only one stop needs to be made bidirectional
stops_1bidi

# only one stop needs to be made bidirectional but the bidi-edges extend to the other one
stops_1bidi_extend

# the route between stops requires new bidi edges but they are not reachable by extending from the stops themselves
stops_bidi_between

# import a network where the public transport line contains a direction reversal at a side branch
stops_reverse_en_route

# avoid adding bidi edges if connectivity can "reasonably" be achieved without them
stops_bidiPenalty

# add bidirectional edges at disconnected stops and nothing else
stops_minimal

# repair track direction before the first and after the last stop based on terminal line edges (virtual stops)
# 
beyond_stops

# assign edge priority based on main direction
direction-priority

# extend edge priority based on loaded priorities and main direction
extend-priority

# extend edge priority based on loaded priorities and main direction.
# Not all low-priority edges are bidirectional
extend-priority2

# extend edge priority based on loaded priorities and main direction (all edges are bidi)
extend-priority_bidi

# road connections should not be affect by railway repair
road_connections

# tests for extending existing bidi-edges with explicit filter
extendBidi_filter
