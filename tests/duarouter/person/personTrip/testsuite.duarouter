# test routing taxi trips
taxi

# test attributes fromJunction toJunction and viaJunctions
junctionTaz

# Copy of basic
basic

# Parameters in persons
param

# person with a type
vtype

# car use requested
car

# vehicle choice
car_bike_taxi

# car use requested, network contains bicycle lanes
car_intermodal_net

# car use of a special type requested
car_type

# car and walk possible
car_walk

# car and walk possible detailed output
car_walk_detail

# like car_walk but the network has sidewalks
car_walk_sidewalk

# car and walk possible with arrivalpos 0
car_walk_arrivalpos

# car and walk possible with departPos > 0
car_walk_departPos

# public transport and walk possible
public_walk

# public transport and walk possible
public_walk_singleveh

# public transport without bus stops
unusable_bus

# public transport via bustops
busstop

# public transport via bustops, person arrives very early
busstop_early

# public transport via bustops but the person departs to late to use a bus
busstop_too_late

# public transport via bustops but the person misses barely misses the last bus
busstop_too_late2

# waiting for the bus would take too long. walking should be preferred.
# The first bus departs much later than the walking arrival time
prefer_walking

# waiting for the bus would take too long. walking should be preferred.
# In this case, the first bus departs too soon and the second bus in the line departs too late
prefer_walking2

# public transport via bustops with non matching stops for the same line
busstop_unmatched

# the desired trip is connected for some vClasses but not for the given one
no_valid_connection

# car and walk in one trip
intermodal_car_walk

# car and walk in one trip changing at public transport stop
intermodal_car_walk_ptstop

# car and walk in one trip change at junction
intermodal_car_walk_junction

# car and walk in one trip but no stop for changing modes
intermodal_car_walk_no_place

# train access
access

# train access at random location
access_random

# train access
access_shortcut

# two train access points on the same very short edge
access_twice

# walk to a train stop via access edge
access_walk

# use train stop as a shortcut to connect walks
# 
walk_access_walk
car_public_walk

# bug: person does not board the train when changing access position to 450
car_public_walk2

# bug: person cannot leave the car ahead of the access edge (access edge permission set to pedestrian)
car_public_walk3

# bug: person does not use car when the network was built without walkingareas
car_public_walk4

# bug: car always drives to the end of the access edge
car_public_walk5

# Copy of car_public_walk
car_public_walk_detail

# output bus route as well
ptline_routing

# keep public transport lines even if they end early
early_ending_flow

# keep public transport vehicles even if they end early
early_pt

# parse additionals first to get late public transport
late_pt

# as above but with a flow that starts late
late_pt_flow

# testing intermodal net output
write_net_weight

# Test for parsing and writing human-readable-time
# putting it here because it covers a lot of different inputs
public_walk_human_readable_time

# Copy of car_public_walk
bike_public_walk

# back and forth using walkingarea
walk_walkingareas
walk_crossings_tl

# back and forth using normal vehicle connections
walk_normal_connections

# walk back and forth with implicit connectivity
walk_no_connections

# see #4314
walk_strange_network
intermodal_train_bus_walk

# walking from one access-stop to another access-stop
# 
stop_access_stop

# start directly at a stop and then ride
ride_from_stop

# arrive with a ride at a busStop and continue with a trip
ride_trip

# arrive with a ride at a train stop and continue with a trip that requires access.
# 
ride_trip_access
trip_output
trip_output_geo

# trip with fromTaz and toTaz
taz

# walk past a train stop to reach  the destination edge (access both ways) and then ride a taxi
walk_via_trainStop_ride_taxi

# ride to train station and use access
car_access_allJunctions

# ride to train station and use access
car_access_ptStops

# test reading trips with geo-coordinates
geoTrips

# test reading trips with geo-coordinates
geoTrips_lonLat

# test reading walk with geo-coordinates
geoWalk_lonLat

# test reading ride with geo-coordinates
geoRide_lonLat
carNoRoute

# test for #14343
pt_looped_disconnected

# test for #14343
# 
# the passenger must switch between two trains running on the same line
pt_looped_need_transfer

# test for #14343
# 
# the passenger must switch between two trains running on the same line
pt_looped_need_transfer2
errors
